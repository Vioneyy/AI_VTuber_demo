"""
tts_factory.py
‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á TTS engine ‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤ .env/TTS_ENGINE

‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ "f5_tts_thai" ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
"""
from __future__ import annotations
import os
import logging

logger = logging.getLogger(__name__)


def create_tts_engine(engine_type: str | None = None):
    """
    ‡∏Ñ‡∏∑‡∏ô‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå TTS ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ò‡∏≠‡∏î `async generate(text) -> str` ‡∏Ñ‡∏∑‡∏ô‡∏û‡∏≤‡∏ò‡πÑ‡∏ü‡∏•‡πå WAV

    ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:
    - f5_tts_thai: ‡πÉ‡∏ä‡πâ F5-TTS-Thai adapter ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô

    ‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏ô‡∏¥‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡∏à‡∏∞‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ .env ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    """
    et = (engine_type or os.getenv("TTS_ENGINE", "f5_tts_thai")).lower()
    logger.info(f"üéØ TTS Engine: {et}")

    if et == "f5_tts_thai":
        # ‡πÉ‡∏ä‡πâ factory ‡∏Ç‡∏≠‡∏á f5_tts_thai ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡∏Ñ‡∏∑‡∏ô F5ThaiAdapter)
        from .f5_tts_thai import create_tts_engine as create_f5
        return create_f5(et)

    # ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö engine ‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ô‡∏µ‡πâ
    logger.error(
        "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö TTS_ENGINE='%s' ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ TTS_ENGINE=f5_tts_thai ‡πÉ‡∏ô .env",
        et,
    )
    raise RuntimeError("Unsupported TTS_ENGINE. Set TTS_ENGINE=f5_tts_thai")